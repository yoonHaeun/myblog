spring.profiles.active=local
#운영 환경에서는 validate를 사용
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# 개발시 SQL 로깅을 하여 어떤 값으로 어떤 SQL이 실행되는지 확인
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# 톰캣 기본 요청 사이즈는 2MB
server.tomcat.max-http-form-post-size=5MB
# HTML <FORM>에서 th:method에서 PUT 또는 DELETE를 사용해서 보내는 _method를 사용해서  @PutMapping과 @DeleteMapping으로 요청을 맵핑.
spring.mvc.hiddenmethod.filter.enabled=true
#정적 리소스에 변화가 있을 때 바로 반영
spring.devtools.livereload.enabled=true
# 웹 서버 호스트
app.host=http://localhost:8080

# thymeleaf 참조 경로
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# thymeleaf 대한 캐시를 남기지 않는다 ( 운영시는 true)
spring.thymeleaf.cache=false
#spring.thymeleaf.cache=true

#templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생
spring.thymeleaf.check-template-location=true

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# DB Source URL
spring.datasource.url=jdbc:mysql://mydb1.cx3p4afrlaxg.ap-northeast-2.rds.amazonaws.com:3306/inseoul
# DB username
spring.datasource.username=root
# DB password
spring.datasource.password=dbsgkdms17
